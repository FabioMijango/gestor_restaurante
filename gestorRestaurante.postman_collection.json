{
	"info": {
		"_postman_id": "ac177340-b2d1-4f9c-b4d2-dce1470766c3",
		"name": "gestorRestaurante",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "49093917",
		"_collection_link": "https://fabiomijango-9717621.postman.co/workspace/Fabio-Mijango's-Workspace~2c21bc8e-a1a7-46a0-8d89-5e284438b739/collection/49093917-ac177340-b2d1-4f9c-b4d2-dce1470766c3?action=share&source=collection_link&creator=49093917"
	},
	"item": [
		{
			"name": "table",
			"item": [
				{
					"name": "findAllTables",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/tables",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "saveTable",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tableNumber\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/tables",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTable",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"id\": \"8731cc4f-8cb8-46c1-b458-b63530fa83ec\",\r\n    \"newState\": \"Occupied\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/tables",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"tables"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTableById",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/tables/8731cc4f-8cb8-46c1-b458-b63530fa83ec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"tables",
								"8731cc4f-8cb8-46c1-b458-b63530fa83ec"
							]
						}
					},
					"response": []
				},
				{
					"name": "findTableById",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/tables/240ed98f-cf9d-4a27-9587-8cf873e4db8d",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"tables",
								"240ed98f-cf9d-4a27-9587-8cf873e4db8d"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "dish",
			"item": [
				{
					"name": "getAllDishes",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/dishes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "saveDish",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "  {\r\n    \"name\": \"Tomato Basil Soup 3 - Version Alterna\",\r\n    \"price\": 4.75,\r\n    \"dishCategory\": \"Soup\"\r\n  }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/dishes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateDish",
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"842f8ec9-041e-41ff-ba2a-19d22cabb834\",\r\n  \"name\": \"Plato actualizado\",\r\n  \"description\": \"Descripcion nueva\",\r\n  \"price\": 9.99,\r\n  \"available\": false\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/dishes",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"dishes"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteDishById",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/dishes/e8aaf475-2abf-4bda-b872-e336b5c2840c",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"dishes",
								"e8aaf475-2abf-4bda-b872-e336b5c2840c"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDishById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/dishes/3c62b77e-8633-41d2-9e39-cdfd47385787",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"dishes",
								"3c62b77e-8633-41d2-9e39-cdfd47385787"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "getAllUsers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{authToken}}"
							}
						],
						"url": {
							"raw": "http://localhost:8080/api/v1/users",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "saveUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"test\",\r\n  \"email\": \"test@test.com\",\r\n  \"password\": \"Password1\",\r\n  \"roleName\": \"Admin\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUserById",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/users/c2e8d863-0314-4c92-a96d-02a6c3d712ed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"c2e8d863-0314-4c92-a96d-02a6c3d712ed"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUserById",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"test\",\r\n  \"email\": \"test@test.com\",\r\n  \"password\": \"Password1\",\r\n  \"roleName\": \"Admin\"\r\n}"
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/c2e8d863-0314-4c92-a96d-02a6c3d712ed",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"c2e8d863-0314-4c92-a96d-02a6c3d712ed"
							]
						}
					},
					"response": []
				},
				{
					"name": "login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Extrae el token JWT de la respuesta y lo guarda en la variable de entorno 'authToken'",
									"let jsonData;",
									"try {",
									"    jsonData = pm.response.json();",
									"} catch (e) {",
									"    pm.test(\"La respuesta no es un JSON válido\", function () {",
									"        pm.expect.fail(\"La respuesta no es un JSON válido\");",
									"    });",
									"}",
									"",
									"if (jsonData && jsonData.data && jsonData.data.token) {",
									"    pm.environment.set(\"authToken\", jsonData.data.token);",
									"    pm.test(\"Token JWT guardado correctamente en la variable de entorno 'authToken'\", function () {",
									"        pm.expect(pm.environment.get(\"authToken\")).to.eql(jsonData.data.token);",
									"    });",
									"    console.log(jsonData.data.token)",
									"} else {",
									"    pm.test(\"No se encontró el token JWT en la respuesta\", function () {",
									"        pm.expect.fail(\"No se encontró el campo data.token en la respuesta\");",
									"    });",
									"    pm.environment.set(\"authToken\", \"\")",
									"}"
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"username\": \"test\",\r\n  \"password\": \"Password1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/users/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"users",
								"login"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "order",
			"item": [
				{
					"name": "getAllOrders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "saveOrder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"tableId\": \"f89a0a24-8c83-45d5-97f6-9a2b3377fb50\",\r\n  \"waiterEmail\": \"admin@test.com\",\r\n  \"dishes\": [\r\n    {\r\n        \"dishId\": \"cfeb706d-b7a1-4ba6-b6aa-a0909ffcb303\",\r\n        \"quantity\": 3\r\n    },\r\n    {\r\n        \"dishId\": \"0f685bac-952d-4dbe-a22b-a5473506530b\",\r\n        \"quantity\": 2\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateOrder",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {},
								"requests": {}
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"orderId\": \"977da303-f14a-404d-b71f-5819f2d46f2e\",\r\n  \"orderState\": \"In Preparation\",\r\n  \"dishes\": [\r\n    {\r\n        \"dishId\": \"cfeb706d-b7a1-4ba6-b6aa-a0909ffcb303\",\r\n        \"quantity\": 3\r\n    },\r\n    {\r\n        \"dishId\": \"0f685bac-952d-4dbe-a22b-a5473506530b\",\r\n        \"quantity\": 2\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:8080/api/v1/orders",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteById",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders/b200ca70-2171-4cd9-8b77-d477c57369b9",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders",
								"b200ca70-2171-4cd9-8b77-d477c57369b9"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOrderById",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders/45751205-88f9-4b4e-a17f-a91b5a3afaec",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders",
								"45751205-88f9-4b4e-a17f-a91b5a3afaec"
							]
						}
					},
					"response": []
				},
				{
					"name": "closeOrder",
					"request": {
						"method": "PATCH",
						"header": [],
						"url": {
							"raw": "http://localhost:8080/api/v1/orders/close/977da303-f14a-404d-b71f-5819f2d46f2e",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"api",
								"v1",
								"orders",
								"close",
								"977da303-f14a-404d-b71f-5819f2d46f2e"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{authToken}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"packages": {},
						"requests": {},
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"variable": [
		{
			"key": "BaseURL",
			"value": "",
			"type": "default"
		}
	]
}